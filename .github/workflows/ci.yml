name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm Environment
        uses: ./.github/actions/setup-pnpm

      - name: Check formatting
        run: pnpm check-format

  test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: format
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm Environment
        uses: ./.github/actions/setup-pnpm

      - name: Debug - Check dependency resolution
        run: |
          echo "=== Checking fastify-tanstack-start dependencies ==="
          cd packages/fastify-tanstack-start
          echo "--- Installed packages (depth 0) ---"
          pnpm list --depth 0
          echo ""
          echo "--- @fastify/middie location ---"
          ls -la node_modules/@fastify/ || echo "No local @fastify directory"
          echo ""
          echo "--- Checking if @fastify/middie types exist ---"
          if [ -L "node_modules/@fastify/middie" ]; then
            echo "@fastify/middie is a symlink to:"
            readlink -f node_modules/@fastify/middie
            echo "Contents of target:"
            ls -la "$(readlink -f node_modules/@fastify/middie)"
            echo ""
            echo "Types directory:"
            ls -la "$(readlink -f node_modules/@fastify/middie)/types" || echo "No types directory"
          fi
          echo ""
          echo "--- TypeScript version ---"
          pnpm exec tsc --version
          echo ""
          echo "--- tsconfig.json ---"
          cat tsconfig.json

      - name: Build packages and examples
        run: pnpm -r build

      - name: Get Playwright version
        id: playwright-version
        shell: bash
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('@playwright/test/package.json').version)")" >> "$GITHUB_ENV"

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          # This is the directory where Playwright stores its browser binaries.
          path: ~/.cache/ms-playwright
          # The key is crucial for cache invalidation.
          # It includes the runner's OS and the Playwright version.
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install webkit --with-deps

      - name: Run tests
        run: pnpm test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

